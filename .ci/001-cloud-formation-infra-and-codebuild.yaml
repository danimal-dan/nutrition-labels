AWSTemplateFormatVersion: '2010-09-09'
Description: Roles, shared resources, and build pipelines for the Nutrition Labels Stack
Parameters:
  GitHubOAuthToken:
    Type: String
    NoEcho: true
    MinLength: 93
    MaxLength: 93
    AllowedPattern: '[A-Za-z0-9_]*'
  GitHubOwner:
    Type: String
    Default: danimal-dan
    AllowedPattern: '[A-Za-z0-9-]+'
  GitHubRepo:
    Type: String
    Default: nutrition-labels
    AllowedPattern: '[A-Za-z0-9-]+'
  GitHubBranch:
    Type: String
    Default: cicd
    AllowedPattern: '[A-Za-z0-9-]+'
Resources:
  NutritionLabelsAppBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: nutrition-labels-app
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        IgnorePublicAcls: false
        BlockPublicPolicy: false
        RestrictPublicBuckets: false
  NutritionLabelsBuildBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: nutrition-labels-build
  NutrionLabelsBuildAndDeployRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          Effect: Allow
          Principal:
            Service:
              - codepipeline.amazonaws.com
              - codebuild.amazonaws.com
              - cloudformation.amazonaws.com
          Action: sts:AssumeRole
  NutrionLabelsBuildAndDeployRolePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - iam:PassRole
            Resource: '*'
            Effect: Allow
            Condition:
              StringEqualsIfExists:
                iam:PassedToService:
                  - cloudformation.amazonaws.com
          - Action:
              - codedeploy:CreateDeployment
              - codedeploy:GetApplication
              - codedeploy:GetApplicationRevision
              - codedeploy:GetDeployment
              - codedeploy:GetDeploymentConfig
              - codedeploy:RegisterApplicationRevision
            Resource: '*'
            Effect: Allow
          - Action:
              - codestar-connections:UseConnection
            Resource: '*'
            Effect: Allow
          - Action:
              - cloudwatch:*
              - s3:*
              - cloudformation:*
              - logs:*
            Resource: '*'
            Effect: Allow
          - Action:
              - lambda:InvokeFunction
              - lambda:ListFunctions
            Resource: '*'
            Effect: Allow
          - Action:
              - cloudformation:CreateStack
              - cloudformation:DeleteStack
              - cloudformation:DescribeStacks
              - cloudformation:UpdateStack
              - cloudformation:CreateChangeSet
              - cloudformation:DeleteChangeSet
              - cloudformation:DescribeChangeSet
              - cloudformation:ExecuteChangeSet
              - cloudformation:SetStackPolicy
              - cloudformation:ValidateTemplate
            Resource: '*'
            Effect: Allow
          - Action:
              - codebuild:BatchGetBuilds
              - codebuild:StartBuild
              - codebuild:BatchGetBuildBatches
              - codebuild:StartBuildBatch
            Resource: '*'
            Effect: Allow
          - Action:
              - cloudformation:ValidateTemplate
            Resource: '*'
            Effect: Allow
      PolicyName: NutrionLabelsBuildAndDeployRolePolicy
      Roles:
        - !Ref NutrionLabelsBuildAndDeployRole
  PdfGeneratorLambdaCodeBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: PdfGeneratorLambda
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:7.0
        Type: LINUX_CONTAINER
      ServiceRole: !Ref NutrionLabelsBuildAndDeployRole
      Source:
        Type: CODEPIPELINE
        BuildSpec: .ci/lambda.buildspec.yaml
      TimeoutInMinutes: 5
  WebAppCodeBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: NutrionLabelsWebApp
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:7.0
        Type: LINUX_CONTAINER
      ServiceRole: !Ref NutrionLabelsBuildAndDeployRole
      Source:
        Type: CODEPIPELINE
        BuildSpec: .ci/webapp.buildspec.yaml
      TimeoutInMinutes: 5
  NutritionLabelsCodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt NutrionLabelsBuildAndDeployRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref NutritionLabelsBuildBucket
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: 1
              OutputArtifacts:
                - Name: SourceOutput
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubOAuthToken
                PollForSourceChanges: false
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: BuildPdfGeneratorLambda
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: LambdaBuildOutput
              Configuration:
                ProjectName: !Ref PdfGeneratorLambdaCodeBuild
              RunOrder: 1
            - Name: BuildWebApp
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: WebAppBuildOutput
              Configuration:
                ProjectName: !Ref WebAppCodeBuild
              RunOrder: 1
        - Name: Deploy-to-S3
          Actions:
            - Name: DeployLambdaPdfGeneratorApp
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: S3
                Version: 1
              Configuration:
                BucketName: !Ref NutritionLabelsAppBucket
                Extract: true
                ObjectKey: lambda
              InputArtifacts:
                - Name: LambdaBuildOutput
              RunOrder: 1
            - Name: DeployNutritionLabelsWebApp
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: S3
                Version: 1
              Configuration:
                BucketName: !Ref NutritionLabelsAppBucket
                Extract: true
                ObjectKey: webapp
              InputArtifacts:
                - Name: WebAppBuildOutput
              RunOrder: 1
  GithubWebhook:
    Type: AWS::CodePipeline::Webhook
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: !Ref GitHubOAuthToken
      RegisterWithThirdParty: 'true'
      Filters:
        - JsonPath: $.ref
          MatchEquals: refs/heads/{Branch}
      TargetPipeline: !Ref NutritionLabelsCodePipeline
      TargetAction: Source
      TargetPipelineVersion: !GetAtt NutritionLabelsCodePipeline.Version
Outputs:
  WebAppBucketName:
    Description: Bucket for WebApp hosting
    Value: !Ref NutritionLabelsAppBucket