AWSTemplateFormatVersion: '2010-09-09'
Description: Roles, shared resources, and build pipelines for the Nutrition Labels Stack
Parameters:
  GitHubOAuthToken:
    Type: String
    NoEcho: true
    MinLength: 93
    MaxLength: 93
    AllowedPattern: '[A-Za-z0-9_]*'
  GitHubOwner:
    Type: String
    Default: danimal-dan
    AllowedPattern: '[A-Za-z0-9-]+'
  GitHubRepo:
    Type: String
    Default: nutrition-labels
    AllowedPattern: '[A-Za-z0-9-]+'
  GitHubBranch:
    Type: String
    Default: main
    AllowedPattern: '[A-Za-z0-9-]+'
  CustomDomainName:
    Type: String
    AllowedPattern: '[A-Za-z0-9_.]*'
  SslCertificateArn:
    Type: String
    AllowedPattern: '^arn:aws:acm:\w+(?:-\w+)+:\d{12}:certificate\/[A-Za-z0-9]+(?:-[A-Za-z0-9]+)+$'
  HostedZoneId:
    Type: String
    AllowedPattern: '[A-Z0-9]*'
Resources:
  NutritionLabelsWebAppBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: nutrition-labels-webapp
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        IgnorePublicAcls: false
        BlockPublicPolicy: false
        RestrictPublicBuckets: false
  NutritionLabelsLambdaBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: nutrition-labels-lambda
  NutritionLabelsBuildBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: nutrition-labels-build
  ApiGatewayExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: 'ApiGatewayS3ProxyPolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - kms:Decrypt
                  - kms:ReEncryptFrom
                Resource: !Sub
                  - 'arn:aws:s3:::${WebAppBucketName}/*'
                  - WebAppBucketName: !Ref NutritionLabelsWebAppBucket
  CloudFormationExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: [cloudformation.amazonaws.com]
            Action: ['sts:AssumeRole']
      Policies:
        - PolicyName: CloudFormationExecutionPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'ec2:*'
                  - 's3:*'
                  - 'lambda:*'
                  - 'dynamodb:*'
                  - 'rds:*'
                  - 'sqs:*'
                  - 'sns:*'
                  - 'iam:*'
                  - 'cloudformation:*'
                  - 'apigateway:*'
                  - 'logs:*'
                Resource: '*'
      Path: '/'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
  NutritionLabelApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: NutritionLabelApi
  NutritionLabelApiResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt NutritionLabelApi.RootResourceId
      PathPart: api
      RestApiId: !Ref NutritionLabelApi
  NutritionLabelWebAppProxyResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt NutritionLabelApi.RootResourceId
      PathPart: '{proxy+}'
      RestApiId: !Ref NutritionLabelApi
  NutritionLabelWebAppApiMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      ResourceId: !Ref NutritionLabelWebAppProxyResource
      RestApiId: !Ref NutritionLabelApi
      MethodResponses:
        - StatusCode: 200
          ResponseParameters:
            method.response.header.Accept-Ranges: false
            method.response.header.Content-Type: true
      RequestParameters:
        method.request.path.proxy: true
      Integration:
        IntegrationHttpMethod: GET
        PassthroughBehavior: WHEN_NO_MATCH
        Type: AWS
        Uri: !Sub
          - 'arn:aws:apigateway:${AWS::Region}:s3:path/${WebAppBucketName}/{proxy}'
          - WebAppBucketName: !Ref NutritionLabelsWebAppBucket
        Credentials: !GetAtt ApiGatewayExecutionRole.Arn
        RequestParameters:
          integration.request.path.proxy: method.request.path.proxy
        IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              method.response.header.Accept-Ranges: integration.response.header.Accept-Ranges
              method.response.header.Content-Type: integration.response.header.Content-Type
  NutritionLabelWebAppApiMethodIndex:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      ResourceId: !GetAtt NutritionLabelApi.RootResourceId
      RestApiId: !Ref NutritionLabelApi
      MethodResponses:
        - StatusCode: 200
          ResponseParameters:
            method.response.header.Content-Type: true
      Integration:
        IntegrationHttpMethod: GET
        Type: AWS
        Uri: !Sub
          - 'arn:aws:apigateway:${AWS::Region}:s3:path/${WebAppBucketName}/index.html'
          - WebAppBucketName: !Ref NutritionLabelsWebAppBucket
        Credentials: !GetAtt ApiGatewayExecutionRole.Arn
        IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              method.response.header.Content-Type: integration.response.header.Content-Type
  NutritionLabelApiCustomDomainName:
    Type: AWS::ApiGateway::DomainName
    Properties:
      DomainName: !Ref CustomDomainName
      CertificateArn: !Ref SslCertificateArn
      EndpointConfiguration:
        Types:
          - 'EDGE'
  NutritionLabelApiBasePathMapping:
    Type: AWS::ApiGateway::BasePathMapping
    Properties:
      DomainName: !Ref NutritionLabelApiCustomDomainName
      RestApiId: !Ref NutritionLabelApi
      Stage: 'prod'
  NutritionLabelApiDNSRecord:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneId: !Ref HostedZoneId
      RecordSets:
        - Name: !Sub '${NutritionLabelApiCustomDomainName}.'
          Type: 'A'
          AliasTarget:
            DNSName: !GetAtt NutritionLabelApiCustomDomainName.DistributionDomainName
            HostedZoneId: !GetAtt NutritionLabelApiCustomDomainName.DistributionHostedZoneId
  NutrionLabelApiGatewayDeployment:
    Type: 'AWS::ApiGateway::Deployment'
    DependsOn:
      - NutritionLabelWebAppApiMethod
    Properties:
      RestApiId: !Ref NutritionLabelApi
      StageName: 'prod'
  NutrionLabelsBuildAndDeployRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          Effect: Allow
          Principal:
            Service:
              - codepipeline.amazonaws.com
              - codebuild.amazonaws.com
              - cloudformation.amazonaws.com
          Action: sts:AssumeRole
  NutrionLabelsBuildAndDeployRolePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - iam:PassRole
            Resource: '*'
            Effect: Allow
            Condition:
              StringEqualsIfExists:
                iam:PassedToService:
                  - cloudformation.amazonaws.com
          - Action:
              - codedeploy:CreateDeployment
              - codedeploy:GetApplication
              - codedeploy:GetApplicationRevision
              - codedeploy:GetDeployment
              - codedeploy:GetDeploymentConfig
              - codedeploy:RegisterApplicationRevision
            Resource: '*'
            Effect: Allow
          - Action:
              - codestar-connections:UseConnection
            Resource: '*'
            Effect: Allow
          - Action:
              - cloudwatch:*
              - s3:*
              - cloudformation:*
              - logs:*
            Resource: '*'
            Effect: Allow
          - Action:
              - lambda:InvokeFunction
              - lambda:ListFunctions
            Resource: '*'
            Effect: Allow
          - Action:
              - cloudformation:CreateStack
              - cloudformation:DeleteStack
              - cloudformation:DescribeStacks
              - cloudformation:UpdateStack
              - cloudformation:CreateChangeSet
              - cloudformation:DeleteChangeSet
              - cloudformation:DescribeChangeSet
              - cloudformation:ExecuteChangeSet
              - cloudformation:SetStackPolicy
              - cloudformation:ValidateTemplate
            Resource: '*'
            Effect: Allow
          - Action:
              - codebuild:BatchGetBuilds
              - codebuild:StartBuild
              - codebuild:BatchGetBuildBatches
              - codebuild:StartBuildBatch
            Resource: '*'
            Effect: Allow
          - Action:
              - cloudformation:ValidateTemplate
            Resource: '*'
            Effect: Allow
      PolicyName: NutrionLabelsBuildAndDeployRolePolicy
      Roles:
        - !Ref NutrionLabelsBuildAndDeployRole
  PdfGeneratorLambdaCodeBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: PdfGeneratorLambda
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:7.0
        Type: LINUX_CONTAINER
      ServiceRole: !Ref NutrionLabelsBuildAndDeployRole
      Source:
        Type: CODEPIPELINE
        BuildSpec: .ci/lambda.buildspec.yaml
      TimeoutInMinutes: 5
  WebAppCodeBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: NutrionLabelsWebApp
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:7.0
        Type: LINUX_CONTAINER
      ServiceRole: !Ref NutrionLabelsBuildAndDeployRole
      Source:
        Type: CODEPIPELINE
        BuildSpec: .ci/webapp.buildspec.yaml
      TimeoutInMinutes: 5
  NutritionLabelsCodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt NutrionLabelsBuildAndDeployRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref NutritionLabelsBuildBucket
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: 1
              OutputArtifacts:
                - Name: SourceOutput
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubOAuthToken
                PollForSourceChanges: false
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: BuildPdfGeneratorLambda
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: LambdaBuildOutput
              Configuration:
                ProjectName: !Ref PdfGeneratorLambdaCodeBuild
              RunOrder: 1
            - Name: BuildWebApp
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: WebAppBuildOutput
              Configuration:
                ProjectName: !Ref WebAppCodeBuild
              RunOrder: 1
        - Name: Deploy-to-S3
          Actions:
            - Name: DeployLambdaPdfGeneratorApp
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: S3
                Version: 1
              Configuration:
                BucketName: !Ref NutritionLabelsLambdaBucket
                Extract: true
              InputArtifacts:
                - Name: LambdaBuildOutput
              RunOrder: 1
            - Name: DeployNutritionLabelsWebApp
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: S3
                Version: 1
              Configuration:
                BucketName: !Ref NutritionLabelsWebAppBucket
                Extract: true
              InputArtifacts:
                - Name: WebAppBuildOutput
              RunOrder: 1
        - Name: Deploy-Lambda-Functions-And-Register-Endpoints
          Actions:
            - Name: DeployLambdaPdfGeneratorApp
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CREATE_UPDATE
                StackName: Nutrition-Labels-Function-Pdf-Generator
                TemplatePath: SourceOutput::.ci/functions/generate-pdf-lambda-and-gateway-path.yaml
                Capabilities: CAPABILITY_NAMED_IAM
                ParameterOverrides: !Sub |
                  {
                    "RestApiId": "${NutritionLabelApi}",
                    "ParentPathResourceId": "${NutritionLabelApiResource}"
                  }
                RoleArn: !GetAtt CloudFormationExecutionRole.Arn
              InputArtifacts:
                - Name: SourceOutput
              RunOrder: 1
  GithubWebhook:
    Type: AWS::CodePipeline::Webhook
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: !Ref GitHubOAuthToken
      RegisterWithThirdParty: 'true'
      Filters:
        - JsonPath: $.ref
          MatchEquals: refs/heads/{Branch}
      TargetPipeline: !Ref NutritionLabelsCodePipeline
      TargetAction: Source
      TargetPipelineVersion: !GetAtt NutritionLabelsCodePipeline.Version
Outputs:
  StackName:
    Description: Name of exported stack
    Value: !Ref AWS::StackName
